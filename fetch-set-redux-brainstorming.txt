- have current profile (profile being visited at any given time) data in redux store at all times
- this includes items, statement, and comments
- user object will still always refer to the currently logged in user
- this should help me get out of the thinking of comparing user.username with params.username
  to detect logic for what to render

TODO:
- setComments and setListData need reducers, they change state
- setComments, postComment, setListData, fetchListData, fetchComments need actions
- combine setStatement and setListData into one action and on reducer?
- pass 'user' into fetchListData everywhere it is called, instead of grabbing user from the authenticated user
  set in the redux state
- check setJwtToken.js, what is going on there with setCurrentUser? Do I need that?
- pull loading functions in Redux actions as well? either way, have to set them up again prob
- repurposed fetchListData and tore apart setListData, finish refactoring this to make it serve
  visited pages and current authenticated user?
- look up how to go about a caching system so visited lists don't have to be refetched and a logged in
  user will have their data fetched upon login so their is no spinner ever seen when visiting Profile


post comment brainstorming:
- add comment to state.comments, then setComments(), then save comments by making post request
  to comments route?
